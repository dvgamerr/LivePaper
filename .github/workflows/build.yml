name: Build

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest]
        # os: [ubuntu-latest, windows-latest]

    steps:
    - name: Install Dependencies Linux
      if: runner.os == 'Linux'
      run: sudo apt-get -yq update && sudo apt-get -yq install cmake libsdl2-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavdevice-dev
    
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      if: success()
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Set env
      if: success()
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Package
      if: success() && runner.os == 'Windows' # && github.ref != 'refs/heads/main'
      run: |
        cd build
        cpack

    - name: Archive Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: "live-paper"
        path: "${{github.workspace}}/build/dist/*.*"

    # - name: Publish Windows
    #   if: success() # && !contains(github.ref, 'main') && !contains(github.event_name, 'pull_request')
    #   uses: ncipollo/release-action@v1
    #   with:
    #     token: ${{ github.token }}
    #     name: LivePaper ${{ env.RELEASE_VERSION }}
    #     tag: ${{ github.ref }}
    #     allowUpdates: true
    #     artifactErrorsFailBuild: true
    #     prerelease: true
    #     removeArtifacts: true
    #     artifacts: "${{github.workspace}}/build/dist/*.*"
